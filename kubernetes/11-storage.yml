---
apiVersion: v1
kind: ConfigMap
metadata:
  name: storage
data:
  config.yml: |
    storage:
      cls: local
      db: postgresql:///?service=swh-storage
      objstorage:
        cls: remote
        url: http://objstorage:5003/
      journal_writer:
        cls: kafka
        args:
          brokers:
            - kafka
          prefix: swh.journal.objects
          client_id: swh.storage.master
  entrypoint.sh: |
    #!/bin/bash

    set -e

    echo Starting the swh-storage API server
    exec gunicorn --bind 0.0.0.0:5002 \
          --reload \
          --threads 4 \
          --workers 2 \
          --log-level DEBUG \
          --timeout 3600 \
          --config 'python:swh.core.api.gunicorn_config' \
          'swh.storage.api.server:make_app_from_configfile()'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage
  labels:
    app: storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storage
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: storage
    spec:
      containers:
      - name: storage
        image: swh/storage:latest
        imagePullPolicy: Always
        command: 
          - /entrypoint.sh
        ports:
        - containerPort: 5002
        env:
        - name: PORT
          value: "5002"
        - name: STATSD_HOST
          value: "prometheus-statsd-exporter"
        - name: STATSD_PORT
          value: "9125"
        - name: POSTGRES_PASSWORD_FILE
          value: "/etc/softwareheritage/db-password"
        - name: PGHOST
          value: "storage-db"
        - name: PGUSER
          valueFrom:
            configMapKeyRef:
              name: storage-db
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: storage-db
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: storage-db
              key: POSTGRES_DB
        - name: SWH_CONFIG_FILENAME
          value: /etc/softwareheritage/config.yml
        volumeMounts:
          - name: db-password
            mountPath: /run/secrets/postgres-password
            subPath: POSTGRES_PASSWORD
            readOnly: true
          - name: config
            mountPath: /etc/softwareheritage/config.yml
            subPath: config.yml
            readOnly: true
          - name: config
            mountPath: /entrypoint.sh
            subPath: entrypoint.sh
            readOnly: true
      volumes:
        - name: config
          configMap:
            name: storage
            defaultMode: 0777
        - name: db-password
          secret:
            secretName: storage-db
---
apiVersion: v1
kind: Service
metadata:
  name: storage
spec:
  type: ClusterIP
  selector:
    app: storage
  ports:
    - port: 5002
      targetPort: 5002
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: storage
spec:
  rules:
  - host: storage.default
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: storage
            port: 
              number: 5002
