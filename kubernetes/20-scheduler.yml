---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scheduler
data:
  config.yml: |
    scheduler:
      cls: local
      db: postgresql:///?service=swh-scheduler

    celery:
      task_broker: amqp://guest:guest@amqp/%2f
      broker_transport_options:
        max_retries: 1
  entrypoint-init-db.sh: |
    #!/bin/bash

    set -e

    echo -n "waiting for database availability"
    set +e
    ko=1
    while [[ $ko -gt 0 ]]; do PGCONNECT_TIMEOUT=2 psql --list &>/dev/null;ko=$?; echo -n .; sleep 0.5; done
    echo
    set -e

    echo Init swh-scheduler database

    echo Creating extensions...
    swh db init-admin --db-name ${PGDATABASE} scheduler

    echo Initializing the database...
    swh db init --db-name ${PGDATABASE} scheduler
  entrypoint.sh: |
    #!/bin/bash

    set -e

    echo "${PGHOST}:5432:${PGDATABASE}:${PGUSER}:${PGPASSWORD}" >> ~/.pgpass
    cat >> ~/.pg_service.conf <<EOF
    [${PGDATABASE}]
    dbname=${PGDATABASE}
    host=${PGHOST}
    port=5432
    user=${PGUSER}
    EOF

    echo Starting the swh-scheduler API server
    exec gunicorn --bind 0.0.0.0:5008 \
         --log-level ${LOGLEVEL} \
         --threads 4 \
         --workers 2 \
         --reload \
         --timeout 3600 \
         --config 'python:swh.core.api.gunicorn_config' \
         'swh.scheduler.api.server:make_app_from_configfile()'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler
  labels:
    app: scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: scheduler
    spec:
      initContainers:
        - name: scheduler-init
          image: swh/scheduler:latest
          imagePullPolicy: Always
          command:
            - /entrypoint.sh
          env:
          - name: PGHOST
            value: "scheduler-db"
          - name: PGUSER
            valueFrom:
              configMapKeyRef:
                name: scheduler-db
                key: POSTGRES_USER
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: scheduler-db
                key: POSTGRES_PASSWORD
          - name: PGDATABASE
            valueFrom:
              configMapKeyRef:
                name: scheduler-db
                key: POSTGRES_DB
          - name: SWH_CONFIG_FILENAME
            value: /etc/softwareheritage/config.yml
          volumeMounts:
            - name: db-password
              mountPath: /run/secrets/postgres-password
              subPath: POSTGRES_PASSWORD
              readOnly: true
            - name: config
              mountPath: /etc/softwareheritage/config.yml
              subPath: config.yml
              readOnly: true
            - name: config
              mountPath: /entrypoint.sh
              subPath: entrypoint-init-db.sh
              readOnly: true
      containers:
      - name: scheduler
        image: swh/scheduler:latest
        imagePullPolicy: Always
        command:
          - /entrypoint.sh
        ports:
        - containerPort: 5008
        env:
        - name: PORT
          value: "5008"
        - name: STATSD_HOST
          value: "prometheus-statsd-exporter"
        - name: STATSD_PORT
          value: "9125"
        - name: PGHOST
          value: "scheduler-db"
        - name: PGUSER
          valueFrom:
            configMapKeyRef:
              name: scheduler-db
              key: POSTGRES_USER
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: scheduler-db
              key: POSTGRES_PASSWORD
        - name: PGDATABASE
          valueFrom:
            configMapKeyRef:
              name: scheduler-db
              key: POSTGRES_DB
        - name: SWH_CONFIG_FILENAME
          value: /etc/softwareheritage/config.yml
        - name: LOGLEVEL
          value: INFO
        volumeMounts:
          - name: db-password
            mountPath: /run/secrets/postgres-password
            subPath: POSTGRES_PASSWORD
            readOnly: true
          - name: config
            mountPath: /etc/softwareheritage/config.yml
            subPath: config.yml
            readOnly: true
          - name: config
            mountPath: /entrypoint.sh
            subPath: entrypoint.sh
            readOnly: true
      volumes:
        - name: config
          configMap:
            name: scheduler
            defaultMode: 0777
        - name: db-password
          secret:
            secretName: scheduler-db
---
apiVersion: v1
kind: Service
metadata:
  name: scheduler
spec:
  type: ClusterIP
  selector:
    app: scheduler
  ports:
    - port: 5008
      targetPort: 5008
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scheduler
spec:
  rules:
  - host: scheduler.default
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: scheduler
            port:
              number: 5008
