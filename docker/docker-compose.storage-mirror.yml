version: "2.1"

services:
  # override web app to use the mirror
  swh-web:
    environment:
      SWH_CONFIG_FILENAME: /web-mirror.yml
    volumes:
      - "./conf/web-mirror.yml:/web-mirror.yml:ro"

  # create a dedicated db for the mirror
  swh-storage-mirror-db:
    image: postgres:16
    environment:
      POSTGRES_DB: swh-storage-mirror
      POSTGRES_PASSWORD: testpassword

  # and an RPC server
  swh-storage-mirror:
    image: swh/stack
    build: ./
    depends_on:
      - swh-storage-mirror-db
      - swh-objstorage
    env_file:
      - ./env/common_python.env
    environment:
      DB_FLAVOR: mirror
      POSTGRES_DB: swh-storage-mirror
      STORAGE_BACKEND: postgresql
      SWH_CONFIG_FILENAME: /storage-mirror.yml
    entrypoint: /entrypoint.sh
    volumes:
      - "./conf/storage-mirror.yml:/storage-mirror.yml:ro"
      - "./services/swh-storage/entrypoint.sh:/entrypoint.sh:ro"

  # and the background process that keeps the mirror in sync with the
  # main graph
  swh-storage-mirror-replayer:
    image: swh/stack
    build: ./
    depends_on:
      - swh-storage-mirror-db
      - swh-objstorage
    env_file:
      - ./env/common_python.env
    environment:
      DB_FLAVOR: mirror
      POSTGRES_DB: swh-storage-mirror
      SWH_CONFIG_FILENAME: /storage-mirror.yml
      LOG_LEVEL: DEBUG
    entrypoint: /entrypoint.sh
    volumes:
      - "./conf/storage-mirror.yml:/storage-mirror.yml:ro"
      - "./services/swh-storage-replayer/entrypoint.sh:/entrypoint.sh:ro"
      - "../swh-storage:/src/swh-storage"

  swh-journal-backfiller:
    image: swh/stack
    build: ./
    entrypoint: /entrypoint.sh
    environment:
      POSTGRES_DB: swh-storage
      SWH_CONFIG_FILENAME: /storage-mirror-backfiller.yml
    depends_on:
      - swh-storage-db
      - kafka
    volumes:
      - "./conf/storage-mirror-backfiller.yml:/storage-mirror-backfiller.yml:ro"
      - "./services/swh-journal-backfiller/entrypoint.sh:/entrypoint.sh:ro"
